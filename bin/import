#! /usr/bin/env ruby

require 'date'
require 'active_support/all'

name, source = ARGV

unless name && source
  puts 'Usage: bin/import [name] [directory]'
  abort
end

time = Time.now

ext = "html"
slug = "#{time.strftime('%Y-%m-%d')}-#{ActiveSupport::Inflector.parameterize(name)}"
post_path = "_posts/#{slug}.#{ext}"

class PostHeader

  attr_accessor :name, :time

  def initialize name:, time:
    @name = name
    @time = time
  end

  def to_s
    <<-HEAD
---
title: #{name.inspect}
date: #{time.strftime('%Y-%m-%d %X')}
---
    HEAD
  end

end

class SanitizedSVG

  DELETIONS = [
    /^---.*---\n/m,
    /^<!\-\-.*\-\->/m,
    /^<\?xml version="1\.0" encoding="utf\-8"\?>/,
    /id=".*?"/
  ]

  attr_reader :source

  def initialize source
    @source = source
  end

  def to_s
    DELETIONS.each_with_object(source) do |d, text|
      text.gsub!(d, '')
    end
  end

end

File.open(post_path, "w") do |exhibition|
  exhibition << PostHeader.new(name: name, time: time)

  Dir.glob("#{source}/*.svg") do |filepath|
    File.open(filepath) do |part|
      exhibition << SanitizedSVG.new(part.read)
    end
  end
end
